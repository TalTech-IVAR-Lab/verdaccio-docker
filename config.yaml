#
# Look here for more config file examples:
# https://github.com/verdaccio/verdaccio/tree/master/conf
#

# Path to a directory with all packages
storage: /verdaccio/storage
# Path to a directory with plugins to include
plugins: /verdaccio/plugins

#listen: 0.0.0.0:443 #"https://npm.dev.ivar.taltech.ee/"

web:
  title: Verdaccio
  # Comment out to disable gravatar support
  # gravatar: false
  # By default packages are orderced ascendant (asc|desc)
  # sort_packages: asc
  # Convert your UI to the dark side
  darkMode: true
  # logo: http://somedomain/somelogo.png
  # favicon: http://somedomain/favicon.ico | /path/favicon.ico

# translate your registry, api i18n not available yet
# i18n:
# list of the available translations https://github.com/verdaccio/ui/tree/master/i18n/translations
#   web: en-US

auth:
  htpasswd:
    file: /verdaccio/conf/dolcevita
    # Maximum amount of users allowed to register, defaults to "+inf".
    # You can set this to -1 to disable registration.
    max_users: -1
    # Encryption algorithm
    algorithm: bcrypt

# A list of other known repositories we can talk to
uplinks:
 npmjs:
   url: https://registry.npmjs.org/

packages:
  '**':
    access: $all
    publish: $authenticated
    unpublish: $authenticated
    proxy: npmjs

# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.
# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.
# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.
server:
  keepAliveTimeout: 60

middlewares:
  audit:
    enabled: true

#https:
#  key: /verdaccio/conf/verdaccio-key.pem
#  cert: /verdaccio/conf/verdaccio-cert.pem
#  ca: /verdaccio/conf/verdaccio-csr.pem

# Log settings
logs: { type: stdout, format: pretty, level: debug }

# Security
security:
  api:
    jwt:
      sign:
        expiresIn: 15d
        notBefore: 0
  web:
    sign:
      expiresIn: 7d

#experiments:
#  # support for npm token command
#  token: false
#  # disable writing body size to logs, read more on ticket 1912
#  bytesin_off: false
#  # enable tarball URL redirect for hosting tarball with a different server, the tarball_url_redirect can be a template string
#  tarball_url_redirect: 'https://mycdn.com/verdaccio/${packageName}/${filename}'
#  # the tarball_url_redirect can be a function, takes packageName and filename and returns the url, when working with a js configuration file
#  tarball_url_redirect(packageName, filename) {
#    const signedUrl = // generate a signed url
#    return signedUrl;
#  }

# This affects the web and api (not developed yet)
#i18n:
#web: en-US
